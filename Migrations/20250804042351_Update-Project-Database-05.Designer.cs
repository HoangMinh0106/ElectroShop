// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBanHang.Data;

#nullable disable

namespace DoAnWebNC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250804042351_Update-Project-Database-05")]
    partial class UpdateProjectDatabase05
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("WebBanHang.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Laptop Gaming"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Màn hình"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bàn phím"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chuột"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tai nghe"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bàn ghế"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Phụ kiện"
                        });
                });

            modelBuilder.Entity("WebBanHang.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("WebBanHang.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebBanHang.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "i5-13420H/512GB/24GB",
                            ImageUrl = "/Image/laptop1.png",
                            Name = "Laptop Lenovo IdeaPad",
                            Price = 15000000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "i5-1235U/512GB/14GB",
                            ImageUrl = "/Image/laptop2.png",
                            Name = "Laptop Avita PURA",
                            Price = 16000000m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "i5-13500H/512GB/16GB",
                            ImageUrl = "/Image/laptop4.png",
                            Name = "Laptop Lenovo ThinkBook",
                            Price = 15500000m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Description = "i5-13420H/512GB/8GB",
                            ImageUrl = "/Image/laptop7.png",
                            Name = "Laptop Dell XPS",
                            Price = 19000000m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Description = "Ultra-5-125H/512GB/16GB",
                            ImageUrl = "/Image/laptop9.png",
                            Name = "Laptop MSI Prestige",
                            Price = 20000000m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Description = "Ultra-7-258V/512GB/16GB",
                            ImageUrl = "/Image/laptop10.png",
                            Name = "Laptop Lenovo Yoga",
                            Price = 21000000m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "i7-13700HX/512GB/16GB",
                            ImageUrl = "/Image/gaming1.png",
                            Name = "Laptop gaming HP Victus 16",
                            Price = 22000000m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "R5-7235HS/512GB/24GB",
                            ImageUrl = "/Image/gaming2.png",
                            Name = "Laptop gaming Lenovo LOQ 15ARP9",
                            Price = 23000000m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "i5-13420H/512GB/32GB",
                            ImageUrl = "/Image/gaming3.png",
                            Name = "Laptop gaming Acer Nitro V ",
                            Price = 24000000m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "i5-12450HX/512GB/16GB",
                            ImageUrl = "/Image/gaming4.png",
                            Name = "Laptop gaming Lenovo LOQ 15IAX9E",
                            Price = 25000000m
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "i5-13420H/512GB/16GB",
                            ImageUrl = "/Image/gaming5.png",
                            Name = "Laptop gaming MSI Thin 15",
                            Price = 26000000m
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "i7-13620H/512GB/16GB",
                            ImageUrl = "/Image/gaming6.png",
                            Name = "Laptop gaming Gigabyte G5",
                            Price = 27000000m
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Description = "i7-13620H/512GB/8GB",
                            ImageUrl = "/Image/gaming7.png",
                            Name = "Laptop gaming MSI Katana 15",
                            Price = 28000000m
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Description = "i7-12650H/512GB/16GB",
                            ImageUrl = "/Image/gaming8.png",
                            Name = "Laptop gaming Acer Aspire 7",
                            Price = 29000000m
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 1",
                            ImageUrl = "/images/monitor1.jpg",
                            Name = "Màn hình 1",
                            Price = 4000000m
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 2",
                            ImageUrl = "/images/monitor2.jpg",
                            Name = "Màn hình 2",
                            Price = 4200000m
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 3",
                            ImageUrl = "/images/monitor3.jpg",
                            Name = "Màn hình 3",
                            Price = 4300000m
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 4",
                            ImageUrl = "/images/monitor4.jpg",
                            Name = "Màn hình 4",
                            Price = 4400000m
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 5",
                            ImageUrl = "/images/monitor5.jpg",
                            Name = "Màn hình 5",
                            Price = 4600000m
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 6",
                            ImageUrl = "/images/monitor6.jpg",
                            Name = "Màn hình 6",
                            Price = 4700000m
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 7",
                            ImageUrl = "/images/monitor7.jpg",
                            Name = "Màn hình 7",
                            Price = 4500000m
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 3,
                            Description = "Màn hình sắc nét 8",
                            ImageUrl = "/images/monitor8.jpg",
                            Name = "Màn hình 8",
                            Price = 4800000m
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 1",
                            ImageUrl = "/images/keyboard1.jpg",
                            Name = "Bàn phím 1",
                            Price = 800000m
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 2",
                            ImageUrl = "/images/keyboard2.jpg",
                            Name = "Bàn phím 2",
                            Price = 850000m
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 3",
                            ImageUrl = "/images/keyboard3.jpg",
                            Name = "Bàn phím 3",
                            Price = 820000m
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 4",
                            ImageUrl = "/images/keyboard4.jpg",
                            Name = "Bàn phím 4",
                            Price = 880000m
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 5",
                            ImageUrl = "/images/keyboard5.jpg",
                            Name = "Bàn phím 5",
                            Price = 900000m
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 6",
                            ImageUrl = "/images/keyboard6.jpg",
                            Name = "Bàn phím 6",
                            Price = 920000m
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 7",
                            ImageUrl = "/images/keyboard7.jpg",
                            Name = "Bàn phím 7",
                            Price = 950000m
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 4,
                            Description = "Bàn phím cơ học 8",
                            ImageUrl = "/images/keyboard8.jpg",
                            Name = "Bàn phím 8",
                            Price = 970000m
                        });
                });

            modelBuilder.Entity("WebBanHang.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("WebBanHang.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebBanHang.Models.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTemplate")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SALE25",
                            DiscountType = 1,
                            DiscountValue = 25m,
                            ExpiryDate = new DateTime(2025, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            IsTemplate = true,
                            MinAmount = 200000m
                        },
                        new
                        {
                            Id = 2,
                            Code = "WELCOME50K",
                            DiscountType = 0,
                            DiscountValue = 50000m,
                            ExpiryDate = new DateTime(2025, 10, 11, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsTemplate = false,
                            MinAmount = 300000m
                        });
                });

            modelBuilder.Entity("OrderItem", b =>
                {
                    b.HasOne("WebBanHang.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBanHang.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebBanHang.Models.Notification", b =>
                {
                    b.HasOne("WebBanHang.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebBanHang.Models.Order", b =>
                {
                    b.HasOne("WebBanHang.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebBanHang.Models.Product", b =>
                {
                    b.HasOne("WebBanHang.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebBanHang.Models.Review", b =>
                {
                    b.HasOne("WebBanHang.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBanHang.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebBanHang.Models.Voucher", b =>
                {
                    b.HasOne("WebBanHang.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebBanHang.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WebBanHang.Models.Product", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("WebBanHang.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
